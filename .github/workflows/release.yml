name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build_and_release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Build and Upload artifacts
        run: |
          msbuild /p:Configuration=Release /p:Platform=x86
          msbuild /p:Configuration=Release /p:Platform=x64
          cp DllInjector/Release/x86/Injector.exe x86_Injector.exe
          cp DllInjector/x64/Release/Injector.exe x64_Injector.exe
          echo "::set-output name=x86_artifact_path::x86_Injector.exe"
          echo "::set-output name=x64_artifact_path::x64_Injector.exe"
        shell: cmd

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload x86 Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ${{ github.workspace }}/x86_Injector.exe
          asset_name: Injector.exe
          asset_content_type: application/octet-stream

      - name: Upload x64 Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ${{ github.workspace }}/x64_Injector.exe
          asset_name: Injector64.exe
          asset_content_type: application/octet-stream
